name: Security Checks

on:
  pull_request:                # Runs on pull requests
  schedule:                    # Runs every week
    - cron: '0 0 * * 0'        # Weekly on Sunday at midnight

permissions:
  contents: read               # Required to clone the repo
  id-token: write              # Optional: Enables OpenID Connect (OIDC) token issuance for secure operations

jobs:
  security_scans:
    name: Security Scans
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}  # Necessary for pull request workflows

      # Step 2: Run Static Application Security Testing (SAST) with Bandit
      - name: Install Bandit
        run: |
          python -m pip install --upgrade pip
          pip install bandit
      - name: Run Bandit SAST Scan
        run: |
          echo "Running Bandit SAST analysis..."
          bandit -r . -f json -o bandit-report.json
      - name: Check Bandit Scan Results
        if: ${{ failure() }}
        run: |
          echo "Bandit found security issues. Failing the workflow."
          exit 1

      # Step 3: Check for Dependency Vulnerabilities with Snyk
      - name: Check for Dependency Vulnerabilities with Snyk
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: "--file=requirements.txt"

      # Step 4: Run TruffleHog Scan for Secrets
      - name: Run TruffleHog Scan for Secrets
        uses: edplato/trufflehog-actions-scan@master
        continue-on-error: true
      - name: Check TruffleHog Scan Results
        if: ${{ steps.trufflehog.outcome == 'failure' }}
        run: exit 1

      # Step 5: Fail the build on any warnings/errors
      - name: Enforce Scan Results
        if: failure()  # Triggered if any step fails
        run: |
          echo "Security checks failed. Blocking the pull request."
          exit 1
